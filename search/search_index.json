{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Home","text":"Confidential Infrastructure for Assured Information Exchange <p>Securing digital commerce and information exchange with federated, auditable, and sovereign data logistics.</p> Perpetual License Free Forever Sovereign Control Begin Integration Sovereign Data Control <p>Maintain absolute authority over your data with robust, end-to-end encryption.</p> Explore the Framework \u2192 Confidential Transactions <p>Execute transactions with verifiable integrity and assured confidentiality.</p> Learn More \u2192 Resilient Infrastructure <p>Utilise a distributed global network for secure and reliable data transit.</p> Review the Architecture \u2192 Unified Platform Access <p>Ensure consistent integration across your entire operational hardware stack.</p> Begin Integration \u2192 Why Choose Lethean? Operational Integrity <p>By guaranteeing data sovereignty, you retain full control over your operational destiny, free from third-party dependence.</p> Assured Commercial Confidentiality <p>Protect sensitive commercial intelligence and intellectual property with cryptographically secure transaction protocols.</p> Reduced Implementation Overhead <p>A unified, platform-agnostic design simplifies integration and reduces the long-term cost of ownership.</p> Designed for Future Compliance <p>An adaptable, decentralised architecture provides a robust foundation for navigating complex regulatory landscapes.</p> Development Roadmap Q3-4 2025 In Progress <ul> <li>Lethean Miner Launch </li> <li>New Lethean Chain</li> <li>Tokenomics</li> </ul> 2025-2026 Planning <ul> <li>Relaunch Exit Node Network </li> <li>Lethean App Release </li> <li>Lethean Marketplace Beta </li> </ul> Completed  Lethean community managed project since 2020  <ul> <li>Lethean Algorithm Change to CNFeb 2018</li> <li>Lethean Algorithm Change to CN V7Apr 2018</li> <li>Lethean Algorithm Change to CN V8Oct 2018</li> <li>Lethean Algorithm Change to CN RMar 2019</li> <li>Lethean Algorithm Change to Arg Chukwa v2Feb 2022</li> </ul> Reclaim Your Digital Sovereignty <p>Join a growing community building the future of assured information exchange. Explore the framework and get involved today.</p> Quick Start Guide View on GitHub Discord Twitter"},{"location":"getting-started/index.html","title":"Getting Started","text":"<p>Welcome to the Lethean documentation. Here you can find guides to help you get started with our software.</p>"},{"location":"getting-started/index.html#choose-your-path","title":"Choose your path","text":"<ul> <li> <p>Chain Node</p> <p>Learn how to set up and run a Lethean blockchain node.</p> <p> Get started</p> </li> <li> <p>Wallet</p> <p>Everything you need to know about using the Lethean wallet.</p> <p> Get started</p> </li> <li> <p>Developer</p> <p>Guides for developers, including compiling from source.</p> <p> Get started</p> </li> <li> <p>Docker</p> <p>Use our Docker-based cross-compiler with Conan to build for any platform.</p> <p> Get started</p> </li> </ul>"},{"location":"getting-started/chain.html","title":"Lethean Blockchain","text":"<p>Info</p> WindowsMacOSLinux <p>Download Windows CLI Blockchain Export</p> <p>Download macOS CLI Blockchain Export</p> <p>Download Linux CLI Blockchain Export</p>"},{"location":"getting-started/chain.html#data-location","title":"Data Location","text":"WindowsMacOSLinux <pre><code>%USERPROFILE%\\\\Lethean\\\\data\\\\lmdb \n</code></pre> <pre><code>$HOME/Lethean/data/lmdb \n</code></pre> <pre><code>$HOME/Lethean/data/lmdb\n</code></pre>"},{"location":"getting-started/chain.html#using-the-cli","title":"Using the CLI","text":"<p>Example</p> WindowsMacOSLinux <ol> <li>Press the Windows key</li> <li>type <code>cmd.exe</code> + Press Enter</li> <li>change directory to Lethean user data <code>cd %USERPROFILE%\\\\Lethean\\\\</code></li> </ol> <ol> <li>Press the <code>CMD</code> + <code>SPACE</code> </li> <li>type <code>Terminal</code> + Press Enter</li> <li>change directory to Lethean user data <code>cd $HOME/Lethean</code></li> </ol> <ol> <li>Open your preferred Terminal</li> <li>change directory to Lethean user data <code>cd $HOME/Lethean</code></li> </ol>"},{"location":"getting-started/chain.html#stopping-a-running-daemon","title":"Stopping a running daemon","text":"WindowsMacOSLinux <pre><code>taskkill /IM \"letheand.exe\" /F\n</code></pre> <pre><code>$HOME/Lethean/data/lmdb \n</code></pre> <pre><code>$HOME/Lethean/data/lmdb\n</code></pre>"},{"location":"getting-started/chain.html#background-daemon","title":"Background Daemon","text":"WindowsMacOSLinux <pre><code>%USERPROFILE%\\\\Lethean\\\\cli\\\\letheand.exe --detach \n</code></pre> <pre><code>$HOME/Lethean/cli/letheand --detach \n</code></pre> <pre><code>$HOME/Lethean/cli/letheand --detach \n</code></pre>"},{"location":"getting-started/chain.html#interactive","title":"Interactive","text":"WindowsMacOSLinux <pre><code>%USERPROFILE%\\\\Lethean\\\\cli\\\\letheand.exe \n</code></pre> <pre><code>$HOME/Lethean/cli/letheand\n</code></pre> <pre><code>$HOME/Lethean/cli/letheand\n</code></pre>"},{"location":"getting-started/chain.html#exporting-chain-data","title":"Exporting Chain data","text":"WindowsMacOSLinux <pre><code>%USERPROFILE%\\\\Lethean\\\\cli\\\\lethean-blockchain-export.exe --data-dir=%USERPROFILE%\\\\Lethean\\\\data --output-file=%USERPROFILE%\\\\Lethean\\\\data\\\\blockchain.raw\n</code></pre> <pre><code>$HOME/Lethean/cli/lethean-blockchain-export --data-dir=$HOME/Lethean/data --output-file=$HOME/Lethean/data/blockchain.raw\n</code></pre> <pre><code>$HOME/Lethean/cli/lethean-blockchain-export --data-dir=$HOME/Lethean/data --output-file=$HOME/Lethean/data/blockchain.raw\n</code></pre>"},{"location":"getting-started/chain.html#importing-chain-data","title":"Importing Chain data","text":"WindowsMacOSLinux <pre><code>%USERPROFILE%\\\\Lethean\\\\cli\\\\lethean-blockchain-export.exe --data-dir=%USERPROFILE%\\\\Lethean\\\\data --input-file=%USERPROFILE%\\\\Lethean\\\\data\\\\blockchain.raw\n</code></pre> <pre><code>$HOME/Lethean/cli/lethean-blockchain-export --data-dir=$HOME/Lethean/data --input-file=$HOME/Lethean/data/blockchain.raw\n</code></pre> <pre><code>$HOME/Lethean/cli/lethean-blockchain-export --data-dir$HOME/Lethean/data --input-file=$HOME/Lethean/data/blockchain.raw\n</code></pre>"},{"location":"getting-started/wallet.html","title":"Lethean Wallet","text":"<p>Info</p> WindowsMacOSLinux <p>Download Windows CLI Blockchain Export</p> <p>Remote Hosts: <code>seed.lethean.io</code>, <code>nodes.hashvault.pro</code></p> <p>Download macOS CLI Blockchain Export</p> <p>Remote Hosts: <code>seed.lethean.io</code>, <code>nodes.hashvault.pro</code></p> <p>Download Linux CLI Blockchain Export</p> <p>Remote Hosts: <code>seed.lethean.io</code>, <code>nodes.hashvault.pro</code></p>"},{"location":"getting-started/wallet.html#data-location","title":"Data Location","text":"WindowsMacOSLinux <pre><code>%USERPROFILE%\\\\Lethean\\\\wallets \n</code></pre> <pre><code>$HOME/Lethean/wallets\n</code></pre> <pre><code>$HOME/Lethean/wallets\n</code></pre>"},{"location":"getting-started/wallet.html#using-the-cli","title":"Using the CLI","text":"<p>Example</p> WindowsMacOSLinux <ol> <li>Press the Windows key</li> <li>type <code>cmd.exe</code> + Press Enter</li> <li>change directory to Lethean user data <code>cd %USERPROFILE%\\\\Lethean\\\\</code></li> </ol> <ol> <li>Press the <code>CMD</code> + <code>SPACE</code> </li> <li>type <code>Terminal</code> + Press Enter</li> <li>change directory to Lethean user data <code>cd $HOME/Lethean</code></li> </ol> <ol> <li>Open your preferred Terminal</li> <li>change directory to Lethean user data <code>cd $HOME/Lethean</code></li> </ol>"},{"location":"getting-started/wallet.html#new-wallet","title":"New Wallet","text":"WindowsMacOSLinux <pre><code>cd %USERPROFILE%\\\\Lethean\\\\wallets &amp;&amp; ..\\\\cli\\\\lethean-wallet-cli.exe --daemon-host=seed.lethean.io --generate-new-wallet=wallet\n</code></pre> <pre><code>cd $HOME/Lethean/wallets &amp;&amp; ../cli/lethean-wallet-cli --daemon-host=seed.lethean.io --generate-new-wallet=wallet\n</code></pre> <pre><code>cd $HOME/Lethean/wallets &amp;&amp; ../cli/lethean-wallet-cli --daemon-host=seed.lethean.io --generate-new-wallet=wallet\n</code></pre>"},{"location":"getting-started/wallet.html#restore-wallet-from-seed","title":"Restore Wallet from Seed","text":"WindowsMacOSLinux <pre><code>cd %USERPROFILE%\\\\Lethean\\\\wallets &amp;&amp; ..\\\\cli\\\\lethean-wallet-cli.exe --daemon-host=seed.lethean.io -restore-deterministic-wallet --generate-new-wallet=wallet\n</code></pre> <pre><code>cd $HOME/Lethean/wallets &amp;&amp; ../cli/lethean-wallet-cli --daemon-host=seed.lethean.io -restore-deterministic-wallet --generate-new-wallet=wallet\n</code></pre> <pre><code>cd $HOME/Lethean/wallets &amp;&amp; ../cli/lethean-wallet-cli --daemon-host=seed.lethean.io -restore-deterministic-wallet --generate-new-wallet=wallet\n</code></pre>"},{"location":"getting-started/wallet.html#restore-wallet-from-keys","title":"Restore Wallet From Keys","text":"WindowsMacOSLinux <pre><code>cd %USERPROFILE%\\\\Lethean\\\\wallets &amp;&amp; ..\\\\cli\\\\lethean-wallet-cli.exe --daemon-host=seed.lethean.io --generate-new-keys=wallet\n</code></pre> <pre><code>cd $HOME/Lethean/wallets &amp;&amp; ../cli/lethean-wallet-cli --daemon-host=seed.lethean.io --generate-new-keys=wallet\n</code></pre> <pre><code>cd $HOME/Lethean/wallets &amp;&amp; ../cli/lethean-wallet-cli --daemon-host=seed.lethean.io --generate-new-keys=wallet\n</code></pre>"},{"location":"getting-started/wallet.html#open-wallet","title":"Open Wallet","text":"WindowsMacOSLinux <pre><code>cd %USERPROFILE%\\\\Lethean\\\\wallets &amp;&amp;  ..\\\\cli\\\\lethean-wallet-cli --daemon-host=seed.lethean.io --wallet-file=wallet \n</code></pre> <pre><code>cd $HOME/Lethean/wallets &amp;&amp; ../cli/lethean-wallet-cli --daemon-host=seed.lethean.io --wallet-file=wallet\n</code></pre> <pre><code>cd $HOME/Lethean/wallets &amp;&amp; ../cli/lethean-wallet-cli --daemon-host=seed.lethean.io --wallet-file=wallet\n</code></pre>"},{"location":"getting-started/developer/index.html","title":"Developer Onboarding Guide","text":"<p>How to go from a GitHub issue to a merged Pull Request for the LetheanVPN Blockchain.</p>"},{"location":"getting-started/developer/index.html#prerequisites","title":"Prerequisites","text":"Platform Packages Installation Commands Common git \u22652.30, make, python \u22653.9, conan \u22652.0, cmake \u22653.22, a supported C/C++ compiler (see OS-specific rows) Windows Chocolatey, PowerShell powershellchoco install conanchoco install python --prepip install -r docs/requirements.txt macOS Homebrew brew install conanbrew install python@3.9pip3 install -r docs/requirements.txt Linux apt (or distro-specific), pipx apt-get update &amp;&amp; apt-get install -y pipxpipx ensurepathrefresh   # reload $PATHpipx install conanpipx install -r docs/requirements.txt <p>Tip: After installing the Python requirements, you can verify them with:</p> <pre><code>pip list | grep -E 'mkdocs|jinja2'\n</code></pre>"},{"location":"getting-started/developer/index.html#repository-layout","title":"Repository Layout","text":"<pre><code>\u251c\u2500 conanfile.txt           # Third-party libs\n\u251c\u2500 cmake/\n\u2502   \u2514\u2500 profiles/           # Conan + CMake toolchain profiles\n\u251c\u2500 docs/\n\u2502   \u251c\u2500 requirements.txt    # MkDocs + plugins\n\u2502   \u2514\u2500 *.md                # Documentation sources\n\u251c\u2500 src/                    # C++ source tree\n\u251c\u2500 tests/                  # Unit / integration tests\n\u251c\u2500 Makefile                # High-level build driver\n\u251c\u2500 README.md\n</code></pre>"},{"location":"getting-started/developer/index.html#branching-issue-workflow","title":"Branching &amp; Issue Workflow","text":""},{"location":"getting-started/developer/index.html#issue-creation","title":"Issue Creation","text":"<ol> <li>Open a GitHub Issue.</li> <li>Choose an appropriate label (bug, enhancement, docs, ...).</li> <li>Assign a milestone if the work belongs to a release.</li> </ol>"},{"location":"getting-started/developer/index.html#checklist","title":"Checklist","text":"<ul> <li>Title follows : short description. <li>Description contains reproduction steps or design goals.</li> <li>Acceptance criteria are clearly listed.</li>"},{"location":"getting-started/developer/index.html#branch-naming","title":"Branch Naming","text":"<p><pre><code>dev-&lt;issue-number&gt;-&lt;short-slug&gt;\n</code></pre> Example: <code>dev-1234-add-grpc-gateway</code></p> <ul> <li>Create the branch after the issue exists (so you know the number).</li> <li>Keep the branch short-lived; aim to merge within a few days.</li> </ul>"},{"location":"getting-started/developer/index.html#pull-request","title":"Pull Request","text":"Field Recommended Value Base branch dev Title template [ # ]  Description template markdown## Related IssueCloses ### Summary## Checklist- [ ] Code builds (<code>make &lt;profile&gt;</code>) - [ ] Tests pass (<code>make test</code> or <code>make test-debug</code>) - [ ] Docs updated (<code>make docs</code>) - [ ] C++ tags regenerated (<code>make tags</code>) - [ ] No lint/format warnings (run <code>clang-format -i</code> if applicable) Reviewers At least one senior maintainer; optionally a domain expert (crypto, networking, ...)"},{"location":"getting-started/developer/index.html#local-development-building-the-code","title":"Local Development \u2013 Building the Code","text":""},{"location":"getting-started/developer/index.html#conan-dependency-installation","title":"Conan Dependency Installation","text":"<p>Conan resolves the libraries listed in <code>conanfile.txt</code>. The Makefile automatically runs <code>conan install</code> for the selected profile, so you normally don\u2019t need to invoke Conan manually.</p> <p>If you modify the dependency list, run:</p> <pre><code>make clean &amp;&amp; make &lt;profile&gt;\n</code></pre> <p>to force a fresh Conan install.</p>"},{"location":"getting-started/developer/index.html#build-profiles","title":"Build Profiles","text":"<p>All profiles live in <code>cmake/profiles/</code>. Invoke a profile with: <pre><code>make &lt;profile&gt; [TESTNET=1]\n</code></pre></p> <p>Examples:</p> <pre><code>make apple-clang-arm64-release\nmake gcc-linux-amd64-release TESTNET=1\n</code></pre> <p>Notes:</p> <ul> <li>Artefacts are placed under <code>build/&lt;profile&gt;/</code>.</li> <li><code>TESTNET=1</code> toggles the CMake flag <code>-DTESTNET=1</code> (test-net mode).</li> <li>Omitting TESTNET defaults to main-net (0).</li> </ul>"},{"location":"getting-started/developer/index.html#common-shortcuts","title":"Common Shortcuts","text":"Target Command Release build make release Debug build make debug Static release make static Clean all build dirs make clean Show help make help Run tests (release) make test Run tests (debug) make test-debug"},{"location":"getting-started/developer/index.html#parallel-builds","title":"Parallel Builds","text":"<p>The Makefile detects the number of CPU cores and passes <code>-j&lt;N&gt;</code> to CMake. Override with an environment variable if needed: <pre><code>CPU_CORES=4 make release\n</code></pre></p>"},{"location":"getting-started/developer/index.html#running-the-test-suite","title":"Running the Test Suite","text":"<pre><code>make test          # Release-mode tests\nmake test-debug    # Debug-mode tests\n</code></pre> <ul> <li>Tests use the same Conan dependencies, so a clean build is recommended after large dependency changes.</li> <li>Fix any failing test locally before pushing the branch.</li> </ul>"},{"location":"getting-started/developer/index.html#documentation-workflow","title":"Documentation Workflow","text":""},{"location":"getting-started/developer/index.html#prerequisites_1","title":"Prerequisites","text":"<p>Python packages from <code>docs/requirements.txt</code> (already installed in the Prerequisites section).</p>"},{"location":"getting-started/developer/index.html#build-the-site","title":"Build the Site","text":"<pre><code>make docs\n</code></pre> <ul> <li>Generates a static site under <code>build/docs</code>.</li> <li>Commit any updated Markdown files; the generated site can be committed optionally (CI can rebuild).</li> </ul>"},{"location":"getting-started/developer/index.html#serve-locally-live-reload","title":"Serve Locally (Live Reload)","text":"<pre><code>make docs-dev\n</code></pre> <ul> <li>Starts a MkDocs server at http://127.0.0.1:8000.</li> <li>The server watches <code>docs/</code> and reloads on changes.</li> </ul>"},{"location":"getting-started/developer/index.html#documentation-checklist","title":"Documentation Checklist","text":"<ul> <li>Updated the relevant .md files.</li> <li>Ran <code>make docs</code> locally and verified the rendered output.</li> <li>Checked navigation (<code>mkdocs.yml</code>) still works.</li> </ul>"},{"location":"getting-started/developer/index.html#continuous-integration-checks","title":"Continuous-Integration Checks","text":"<p>CI expects the following to succeed for every PR:</p> <ul> <li>Conan install succeeds for the profile used in the matrix.</li> <li><code>make &lt;profile&gt;</code> finishes without errors.</li> <li><code>make test</code> exits with status 0.</li> <li><code>make docs</code> runs without broken links.</li> <li>Lint/formatting (if configured) passes.</li> </ul>"},{"location":"getting-started/developer/index.html#release-checklist-maintainers","title":"Release Checklist (Maintainers)","text":"<ol> <li>Ensure <code>main</code> is up-to-date with <code>dev</code>.</li> <li>Merge any outstanding PRs targeting <code>dev</code>.</li> <li>Tag the release:    <pre><code>git tag -a vX.Y.Z -m \"Release X.Y.Z\"\ngit push origin vX.Y.Z\n</code></pre></li> <li>Produce a statically linked binary: <code>make static</code>.</li> <li>Upload artefacts to the GitHub Release page.</li> <li>Update <code>CHANGELOG.md</code> with merged PR titles.</li> </ol>"},{"location":"getting-started/developer/index.html#handy-one-liners-copy-paste","title":"Handy One-Liners (Copy-Paste)","text":""},{"location":"getting-started/developer/index.html#clone-initial-setup","title":"Clone &amp; initial setup","text":"<pre><code>git clone https://github.com/LetheanVPN/blockchain.git\ncd blockchain\nmake configure\n</code></pre>"},{"location":"getting-started/developer/index.html#show-make-targets","title":"Show Make targets","text":"<pre><code>make help\n</code></pre>"},{"location":"getting-started/developer/index.html#start-a-feature-branch","title":"Start a feature branch","text":"<pre><code>git checkout dev\ngit pull origin dev\ngit checkout -b dev-123456-my-feature\n</code></pre>"},{"location":"getting-started/developer/index.html#build-a-testnet-binary","title":"Build a testnet binary","text":"<pre><code>make gcc-linux-amd64-release TESTNET=1\n</code></pre>"},{"location":"getting-started/developer/index.html#serve-docs-locally","title":"Serve docs locally","text":"<pre><code>make docs-dev\n</code></pre>"},{"location":"getting-started/developer/index.html#run-all-checks-before-opening-a-pr","title":"Run all checks before opening a PR","text":"<pre><code>make clean &amp;&amp; make gcc-linux-amd64-release TESTNET=1\nmake test\nmake docs\n</code></pre>"},{"location":"getting-started/developer/index.html#install-conan","title":"Install Conan","text":"WindowsMacOSLinux <pre><code>choco install conan \n</code></pre> <pre><code>brew install conan\n</code></pre> <pre><code>apt-get install pipx\npipx ensurepath\nrefresh\npipx install conan\n</code></pre>"},{"location":"getting-started/developer/index.html#faq-troubleshooting","title":"FAQ / Troubleshooting","text":"Question Answer Conan cannot find a profile. Run <code>make &lt;profile&gt;</code> once; the Makefile will auto-detect missing profiles and create a default one under <code>~/.conan2/profiles/</code>. You can also inspect <code>cmake/profiles/</code> for the expected name. MkDocs server fails with ModuleNotFoundError. Ensure you installed the Python requirements for your OS (<code>pip install -r docs/requirements.txt</code>). Re-activate your virtual environment or restart the terminal if you used pipx. Tests crash on macOS with SIGABRT. Verify you are using the correct Apple-Clang profile (<code>apple-clang-arm64-release</code> on M1/M2, <code>apple-clang-amd64-release</code> on Intel). Clean the build directory (<code>make clean</code>) and rebuild. make docs produces broken links. Run <code>mkdocs build --strict</code> locally to see the exact failures, then fix the offending Markdown or nav entries. Parallel builds cause \u201cfile not found\u201d errors. Some Conan packages generate files lazily; increase the timeout with <code>CONAN_RETRY=5</code> or temporarily disable parallelism (<code>CPU_CORES=1</code>). <p>Happy hacking! \ud83c\udf89 If anything feels unclear, open an issue or ping a maintainer \u2013 we\u2019re here to help you get your contribution merged smoothly.</p>"},{"location":"getting-started/developer/build.html","title":"Building The Blockchain","text":"<p>\u26a0\ufe0f Notice Please make sure you have read the Developer Onboarding Guide before continuing.</p> <p>This project uses a Makefile for building and Conan for dependency management. The primary build targets and instructions are below.</p>"},{"location":"getting-started/developer/build.html#dependency-setup-conan","title":"Dependency Setup (Conan)","text":"<p>Dependencies are managed via Conan. The required libraries are listed in <code>conanfile.txt</code>:</p> <ul> <li>zlib</li> <li>boost</li> <li>openssl</li> <li>miniupnpc</li> <li>jwt-cpp</li> </ul> <p>Conan will automatically install these when you build.</p> WindowsMacOSLinux <pre><code>choco install conan \n</code></pre> <pre><code>brew install conan\n</code></pre> <pre><code>apt-get install pipx\npipx ensurepath\nrefresh\npipx install conan\n</code></pre>"},{"location":"getting-started/developer/build.html#compile-using-make","title":"Compile Using Make","text":"<p>Run <code>make help</code> to see available targets. Common targets include:</p> <ul> <li>release: Build a release version.</li> <li>debug: Build a debug version.</li> <li>static: Build a static release.</li> <li>clean: Remove all build directories.</li> <li>help: Show help message.</li> </ul>"},{"location":"getting-started/developer/build.html#build-targets","title":"Build Targets","text":"<p>Profiles are defined in <code>cmake/profiles/</code>. For each profile, a target is generated: <pre><code>make &lt;profile&gt;\n</code></pre> Example: <pre><code>make apple-clang-armv8\n</code></pre> This builds using the specified profile; the list of targets is:</p> <ul> <li><code>make apple-clang-armv8</code></li> <li><code>make apple-clang-x86_64</code></li> <li><code>make gcc-linux-x86_64</code></li> <li><code>make gcc-linux-armv8</code></li> <li><code>make msvc-194-x86_64</code></li> </ul>"},{"location":"getting-started/developer/build.html#testnet-builds","title":"Testnet Builds","text":"<p>Builds default to <code>mainnet</code>. To create a <code>testnet</code> build, you need to add <code>TESTNET=1</code> with your make command, e.g <code>make apple-clang-armv8 TESTNET=1</code></p>"},{"location":"getting-started/developer/build.html#compile-using-cmake","title":"Compile Using CMake","text":"<p>The project uses CMake, the Makefile is just a wrapper; libraries are found using find_package, so either have them installed  or you can use Conan to install them by adding: </p> <p><code>-DCMAKE_PROJECT_TOP_LEVEL_INCLUDES=\"cmake/conan_provider.cmake\"</code></p> <p>Putting that together, an example command would be: <pre><code>cmake -B build/debug -S . -DCMAKE_PROJECT_TOP_LEVEL_INCLUDES=cmake/conan_provider.cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DSTATIC=1 -DTESTNET=1\ncmake --build=build/debug --config=Release\n</code></pre></p>"},{"location":"getting-started/developer/build.html#documentation","title":"Documentation","text":"<p>Please ensure code improvements also come with documentation updates. The documentation project is integrated. Into the blockchain repo, with helper CMake functions to build and run a local server.</p>"},{"location":"getting-started/developer/build.html#prerequisites","title":"Prerequisites","text":"WindowsMacOSLinux <pre><code>choco install python --pre \npip install -r docs/requirements.txt\n</code></pre> <pre><code>brew install python@3.9\npip3 install -r docs/requirements.txt\n</code></pre> <pre><code>apt-get install pipx\npipx ensurepath\nrefresh\npipx install -r docs/requirements.txt\n</code></pre>"},{"location":"getting-started/developer/build.html#documentation-targets","title":"Documentation Targets","text":"<ul> <li><code>make docs</code>: Build documentation.</li> <li><code>make docs-dev</code>: Serve documentation for local development <code>http://127.0.0.1:8000</code>.</li> </ul>"},{"location":"getting-started/developer/build.html#other-targets","title":"Other Targets","text":"<ul> <li>test: Build and run tests (release mode).</li> <li>test-debug: Build and run tests (debug mode).</li> <li>docs: Build documentation.</li> <li>docs-dev: Serve development documentation.</li> <li>tags: Generate C++ tags for code navigation.</li> </ul>"},{"location":"getting-started/developer/build.html#example-usage","title":"Example Usage","text":""},{"location":"getting-started/developer/build.html#build-release","title":"Build release","text":"<pre><code>make release\n</code></pre>"},{"location":"getting-started/developer/build.html#build-debug","title":"Build debug","text":"<pre><code>make debug\n</code></pre>"},{"location":"getting-started/developer/build.html#compile-for-windows","title":"Compile for Windows","text":"<pre><code>make msvc-194-x86_64\n</code></pre>"},{"location":"getting-started/developer/build.html#compile-for-linux","title":"Compile for Linux","text":"<pre><code>make gcc-linux-x86_64\n</code></pre>"},{"location":"getting-started/developer/build.html#compile-for-apple-arm","title":"Compile for Apple ARM","text":"<pre><code>make apple-clang-armv8\n</code></pre>"},{"location":"getting-started/developer/build.html#compile-for-apple-amd64","title":"Compile for Apple AMD64","text":"<pre><code>make apple-clang-x86_64\n</code></pre>"},{"location":"getting-started/developer/build.html#clean-build-directories","title":"Clean build directories","text":"<pre><code>make clean\n</code></pre>"},{"location":"getting-started/developer/build.html#notes","title":"Notes","text":"<ul> <li>Builds are parallelised based on your CPU cores.</li> <li>Conan profiles are auto-detected if missing.</li> <li>All build artefacts are placed in the <code>build/</code> directory.</li> </ul>"},{"location":"getting-started/developer/docker.html","title":"Docker for Lethean","text":"<p>This document explains how to use the multi-stage <code>Dockerfile</code> to build the Lethean blockchain software.</p>"},{"location":"getting-started/developer/docker.html#overview","title":"Overview","text":"<p>The <code>Dockerfile</code> is designed to provide a consistent and reproducible build environment. It uses a multi-stage build to create different artifacts: a build environment, build cache, compiled binaries, and a final service image.</p> <p>You can target a specific stage of the build using the <code>--target</code> flag with the <code>docker build</code> command.</p> <p>For example: <pre><code>docker build --target=builder .\n</code></pre></p>"},{"location":"getting-started/developer/docker.html#build-stages","title":"Build Stages","text":"<p>There are four distinct build stages:</p>"},{"location":"getting-started/developer/docker.html#1-builder","title":"1. <code>builder</code>","text":"<p>This stage creates a development image that contains all the necessary dependencies and tools to compile the software. It can be used for development by mounting your local source code.</p> <p>To build the builder image: <pre><code>docker build --target=builder -t lethean/builder .\n</code></pre></p> <p>You can then use it for interactive development: <pre><code>docker run -it -v .:/code lethean/builder /bin/bash\n</code></pre></p>"},{"location":"getting-started/developer/docker.html#2-build-cache","title":"2. <code>build-cache</code>","text":"<p>This stage produces an image containing only the Conan package cache. This can be useful for speeding up subsequent builds by pre-populating the cache.</p> <p>To create the cache image: <pre><code>docker build --target=build-cache -t lethean/build-cache .\n</code></pre></p>"},{"location":"getting-started/developer/docker.html#3-build-artifacts","title":"3. <code>build-artifacts</code>","text":"<p>This stage produces an image containing only the compiled binaries.</p> <p>To create the artifacts image: <pre><code>docker build --target=build-artifacts -t lethean/build-artifacts .\n</code></pre></p> <p>You can extract the binaries from this image: <pre><code>docker create --name artifacts lethean/build-artifacts\ndocker cp artifacts:/ /path/to/local/binaries\ndocker rm artifacts\n</code></pre></p>"},{"location":"getting-started/developer/docker.html#4-chain-service","title":"4. <code>chain-service</code>","text":"<p>This is the final stage, which produces a lean image containing the Lethean blockchain node and its runtime dependencies.</p> <p>To build the service image: <pre><code>docker build --target=chain-service -t lethean/chain-service .\n</code></pre> or simply: <pre><code>docker build -t lethean/chain-service .\n</code></pre></p>"},{"location":"getting-started/developer/docker.html#build-arguments","title":"Build Arguments","text":"<p>The build process can be customized using <code>docker build --build-arg</code> flags.</p> Argument Default Value Description <code>THREADS</code> <code>1</code> Number of parallel threads to use for compilation. <code>BUILD_BRANCH</code> <code>dev-configure-testnet-1</code> The git branch to clone and build if <code>BUILD_LOCAL=0</code>. <code>BUILD_LOCAL</code> <code>1</code> If set to <code>1</code>, it builds from the local source code in the Docker context. If <code>0</code>, it clones from <code>BUILD_REPO</code>. <code>BUILD_REPO</code> <code>https://github.com/letheanVPN/blockchain.git</code> The git repository to clone when <code>BUILD_LOCAL=0</code>. <code>BUILD_TARGET</code> <code>gcc-linux-armv8</code> The Conan build profile target. Profiles are located in <code>cmake/profiles/</code>. <code>BUILD_FOLDER</code> <code>build/release</code> The output folder for the build. <code>BUILD_TYPE</code> <code>Release</code> The CMake build type (e.g., <code>Release</code>, <code>Debug</code>). <code>BUILD_TESTNET</code> <code>1</code> If set to <code>1</code>, it builds the testnet version and creates symlinks for binaries without the <code>-testnet</code> suffix."},{"location":"getting-started/developer/docker.html#example-building-for-a-different-target","title":"Example: Building for a different target","text":"<p>To build for a different architecture, you can change the <code>BUILD_TARGET</code>. For example, for <code>gcc-linux-x86-64</code>:</p> <pre><code>docker build --build-arg BUILD_TARGET=gcc-linux-x86-64 -t lethean/chain-service .\n</code></pre>"},{"location":"getting-started/developer/docker.html#example-building-from-a-git-branch","title":"Example: Building from a git branch","text":"<p>To build a specific branch from the git repository instead of local files:</p> <pre><code>docker build --build-arg BUILD_LOCAL=0 --build-arg BUILD_BRANCH=main -t lethean/chain-service .\n</code></pre>"},{"location":"network/index.html","title":"Lethean Network Overview","text":"<p>The Lethean network began in 2017 as the first encrypted decentralized VPN (dVPN). Initially launched as a prototype, the project was soon handed over to the open-source community. Since then, Lethean has evolved far beyond its original concept, driven by collaborative design and continuous innovation.</p> <p>Today, Lethean is architected as a self-regulating network focused on confidentiality and data sovereignty. This means that users retain full control over their data, privacy, and digital identity, while the network itself enforces security and trust through decentralized protocols. The system is designed to adapt and respond to threats and changes without relying on centralized authorities, ensuring robust privacy and resilience.</p> <p>As we implement the virtual network stack, this documentation will be expanded to detail the technical architecture, governance mechanisms, and the unique features that enable self-regulation and user sovereignty. Stay tuned for updates as the network continues to grow and mature.</p>"},{"location":"network/vpn.html","title":"Setup VPN Docker","text":"<p>\u26a0\ufe0f Notice Do not use this, even for fun, it's WIP and not ready for any use.</p>"},{"location":"network/vpn.html#generate-certificates","title":"Generate Certificates:","text":""},{"location":"network/vpn.html#defaults-easy","title":"Defaults (easy)","text":"<pre><code>docker run --rm -v $(pwd):/home/lthn/openvpn lthn/openvpn generate_certs.sh --defaults\n</code></pre>"},{"location":"network/vpn.html#custom-harder","title":"Custom (harder)","text":""},{"location":"network/vpn.html#1-root-certificate-authority","title":"1) Root Certificate Authority","text":"<ul> <li><code>&lt;your-capass&gt;</code> = The password for the root CA VPN Certificate</li> <li><code>&lt;cacn&gt;</code> = CommonName you can create multiple certs if you are running whitelabel VPN services multiple clients <pre><code>docker run -v $(pwd):/home/lthn/openvpn --rm lthn/openvpn generate_certs.sh --ca --with-capass &lt;your-capass&gt; --with-cacn &lt;cacn&gt;\n</code></pre></li> </ul>"},{"location":"network/vpn.html#server-certificate","title":"Server Certificate","text":"<ul> <li><code>&lt;your-capass&gt;</code> = the password for the cert from step 1</li> <li><code>&lt;your-serverpass&gt;</code> = the password for the server certificate thats about to be made</li> <li><code>&lt;your-server-dns&gt;</code> = typically the machine hostname <code>$(hostname)</code> or the dns enterypoint  <pre><code>docker run -v $(pwd):/home/lthn/openvpn --rm lthn/openvpn generate_certs.sh --server --with-capass &lt;your-capass&gt; --with-serverpass &lt;your-serverpass&gt; --with-servercn &lt;your-server-dns&gt;\n</code></pre></li> </ul>"},{"location":"network/vpn.html#client-certificate","title":"Client Certificate","text":"<ul> <li><code>&lt;your-capass&gt;</code> = the password for the CA Cert</li> <li><code>&lt;clientpass&gt;</code> = the password for the client cert about to be made</li> <li><code>&lt;clientcn&gt;</code> = client commonname <pre><code>docker run -v $(pwd):/home/lthn/openvpn --rm lthn/openvpn generate_certs.sh --client --with-capass &lt;your-capass&gt; --with-clientpass &lt;clientpass&gt; --with-clientcn &lt;clientcn&gt;\n</code></pre></li> </ul>"},{"location":"network/vpn.html#generate-a-openvpn-profile","title":"Generate a OpenVPN profile","text":""},{"location":"network/vpn.html#using-the-default-certificates","title":"Using the default Certificates","text":"<ul> <li><code>&lt;your-server-public-dns&gt;</code> = typically the machine hostname <code>$(hostname)</code> or the dns enterypoint  <pre><code>docker run -v $(pwd):/home/lthn/openvpn --rm lthn/openvpn generate_client_profile.sh Lethean_VPN_Client &lt;your-server-public-dns&gt;\n</code></pre></li> </ul>"},{"location":"network/vpn.html#using-custom-certificates","title":"Using custom certificates","text":"<ul> <li><code>&lt;clientcn&gt;</code> = client commonname</li> <li><code>&lt;your-server-dns&gt;</code> = typically the machine hostname <code>$(hostname)</code> or the dns enterypoint  <pre><code> docker run -v $(pwd):/home/lthn/openvpn --rm lthn/openvpn generate_client_profile.sh &lt;client-cert-cn&gt; &lt;your-server-public-dns&gt;\n</code></pre></li> </ul>"},{"location":"updates/index.html","title":"Project Updates","text":""},{"location":"updates/2024/08/19/testy.html","title":"test","text":"<p>this is a test</p>"},{"location":"web3/index.html","title":"Web3 &amp; Blockchain Settings","text":"<p>Welcome to the Web3 section of the Lethean documentation. Here you'll find resources and guides for interacting with the Lethean blockchain, configuring network settings, and understanding the decentralized infrastructure that powers the network.</p> <p>This section will cover:</p> <ul> <li>How to connect to and interact with the Lethean blockchain</li> <li>Configuration options for wallets, nodes, and RPC endpoints</li> <li>Security and privacy considerations for Web3 operations</li> <li>Links to tokenomics and other related topics</li> </ul> <p>For details on Lethean's tokenomics, see the child page in the navigation. Additional guides and technical references will be added as the network evolves.</p>"},{"location":"web3/index.html#upstream-acknowledgment","title":"Upstream Acknowledgment","text":"<p>Lethean is a network, ontop of the Confidential CryptoNote Ledger; While blockchain plays a huge role for us, it is not what we do.  We are a community of people who believe in the power of decentralization and the importance of confidentiality.</p> <p>We have forked the spiritual successor to CryptoNote, and this section is to thank them, the Zano project and share a snippet about them;</p> From docs.zano.org <p>Zano\u2019s lead developer Andrey Sabelnikov created the first-ever privacy coin protocol code base named CryptoNote. Today, this protocol is used by Monero and hundreds of other projects.</p> <p>Zano is the advanced evolution of Cryptonote, emphasizing unparalleled privacy and adopting a wide variety of technologies that can be used to create all kinds of privacy-focused decentralized applications (dApps) and other projects.</p> <p>Here are they summed up:</p> <ul> <li>Zarcanum: A hallmark of Zano, introducing the world's first hidden amounts Proof of Stake scheme, shaping a novel benchmark in blockchain consensus.</li> <li>Confidential Assets: Beyond the Zano coin, our platform enables user-creatable privacy tokens that possess all the features and functionalities of the native coin, ensuring complete transactional privacy.</li> <li>Ionic Swaps: In Zano's ecosystem, users can smoothly trade between different crypto assets, all while maintaining the essence of privacy.</li> <li>Hybrid PoW/PoS Consensus: By uniting the strengths of both Proof of Work and Proof of Stake processes, Zano delivers enhanced security, curbing double-spend vulnerabilities.</li> <li>Auditable Wallets: An opt-in feature that enables people and organizations to create transparent wallets for situations where we would rather verify than trust. Creating auditable wallets doesn\u2019t affect the privacy of the Zano network in any way.</li> <li>Core Performance: Zano's asynchronous core is a testament to computational efficiency, ensuring forward/backward compatibility and a modular approach ready for the crypto realm's challenges.</li> </ul> <p>Additionally, with features like the dynamic Marketplace API, adaptable Escrow/P2P Contracts, </p>"},{"location":"web3/config.html","title":"Notable Configuration Settings","text":"<p>Most of the configuration you'll want to find is listed on this page; if it's not, please open a GitHub issue</p>"},{"location":"web3/config.html#name-symbol","title":"Name &amp; Symbol","text":"<ul> <li>Name: <code>Lethean</code></li> <li>Symbol: <code>LTHN</code></li> </ul>"},{"location":"web3/config.html#wallet-prefixes","title":"Wallet Prefixes","text":"<p>The blockchain prefixes for each wallet type are listed here.</p> <ul> <li><code>0x1eaf7</code>=<code>iTHN</code> = Main prefix</li> <li><code>0xdeaf7</code>=<code>iTHn</code> = Integrated address</li> <li><code>0x3ceff7</code>=<code>iThN</code> = Auditable Wallet</li> <li><code>0x8b077</code>=<code>iThn</code> = Integrated Auditable Wallet</li> </ul>"},{"location":"web3/tokenomics.html","title":"\ud83d\udcc4 Lethean Whitepaper (Reimagined Chain)","text":""},{"location":"web3/tokenomics.html#introduction","title":"\ud83d\udd12 Introduction","text":"<p>Lethean is a decentralized platform focused on delivering private, censorship-resistant access to internet services \u2014 with VPNs as its first major use case. Originally launched as a Cryptonote-based privacy coin, Lethean is now entering a new chapter.</p> <p>We are initiating a hard fork of the current Lethean blockchain, adopting rich features of the Zano codebase, while retaining Lethean's mission and community. This move brings modern features, greater scalability, and long-term sustainability.</p>"},{"location":"web3/tokenomics.html#purpose-of-the-fork","title":"\ud83d\ude80 Purpose of the Fork","text":"<p>The new Lethean blockchain aims to:</p> <ul> <li>Modernize its infrastructure using Zano's active Cryptonote development base</li> <li>Rebuild trust with old holders and attract new investors</li> <li>Reinforce its original use case: decentralized VPN access</li> <li>Enable long-term support for developers, VPN providers, and coin holders</li> </ul>"},{"location":"web3/tokenomics.html#market-opportunity","title":"\ud83d\udcc8 Market Opportunity","text":"<p>The global VPN market is projected to grow as follows:</p> <ul> <li>2024: $72.89 billion  </li> <li>2025: $88.96 billion  </li> <li>2034: $534.22 billion  </li> <li>CAGR: 22.04% (2024\u20132034)</li> </ul> <p>Lethean aims to capture a slice of this massive and growing market by offering a decentralized, privacy-first alternative to traditional VPN providers.</p>"},{"location":"web3/tokenomics.html#chain-upgrade-snapshot","title":"\ud83e\uddec Chain Upgrade &amp; Snapshot","text":"Parameter Value Parent Chain Lethean (original Cryptonote fork) New Codebase Lethean code base with Zano improvements Max Supply 21 million LTHN Initial Supply 10 million LTHN Snapshot Ratio 100 old LTHN = 1 new LTHN Swap Window 6 months post-launch Unclaimed Swap Allocation Dev fund / ecosystem grants <p>After the 6-month token swap period, any unclaimed coins will be reallocated to the developer and ecosystem fund, subject to transparency and multi-sig control.</p>"},{"location":"web3/tokenomics.html#tokenomics-overview","title":"\ud83d\udcb0 Tokenomics Overview","text":""},{"location":"web3/tokenomics.html#coin-distribution","title":"\ud83e\ude99 Coin Distribution","text":"Category Allocation (%) Notes Proof of Work 45% Miners secure the network and receive rewards Proof of Stake 45% Stakers earn passive income for validating Developer Fund 10% Funded at genesis; supports ongoing development <p>The developer fund is established at genesis and may receive unclaimed swap coins. This fund will be used for development bounties, grants, partnerships, and infrastructure.</p>"},{"location":"web3/tokenomics.html#inflation-supply-management","title":"\ud83d\udcc9 Inflation &amp; Supply Management","text":"Year Target Inflation Notes Y1 20% High initial reward to attract users Y2+ Gradual decrease Floor target ~5% per year Max Supply Cap 21 million LTHN Enforced via smart emissions and burning <ul> <li>Burning Mechanism: A portion of coins will be permanently destroyed during ecosystem usage \u2014 especially VPN service payments \u2014 ensuring deflationary pressure.</li> <li>No supply will exceed 21 million coins.</li> </ul>"},{"location":"web3/tokenomics.html#rewarding-key-stakeholders","title":"\ud83e\uddfe Rewarding Key Stakeholders","text":"<p>Lethean identifies four critical actors that must be incentivized:</p>"},{"location":"web3/tokenomics.html#1-developers","title":"1. \ud83e\uddd1\u200d\ud83d\udcbb Developers","text":"<ul> <li>Supported via a 10% genesis allocation + unclaimed swap funds</li> <li>Transparent multisig-controlled wallet</li> <li>Used for: core development, security audits, feature bounties</li> </ul>"},{"location":"web3/tokenomics.html#2-coin-investors","title":"2. \ud83d\udcbc Coin Investors","text":"<ul> <li>Rewarded via Proof-of-Stake (PoS)</li> <li>Incentivized to hold and secure the network</li> <li>Help support long-term price stability and market cap growth</li> </ul>"},{"location":"web3/tokenomics.html#3-vpn-service-providers","title":"3. \ud83c\udf10 VPN Service Providers","text":"<ul> <li>Must hold a minimum balance of LTHN per exit node</li> <li>VPN exits may require a base amount (TBD: e.g., 500 LTHN per node)</li> <li>Encourages healthy collateral and trust-based provisioning</li> </ul>"},{"location":"web3/tokenomics.html#4-vpn-users","title":"4. \ud83e\uddd1\u200d\ud83d\udcbb VPN Users","text":"<ul> <li>Will use LTHN to pay for anonymous VPN access</li> <li>Benefit from low-cost, decentralized infrastructure</li> <li>Enable coin-burning on each purchase to support token scarcity</li> </ul>"},{"location":"web3/tokenomics.html#governance-ecosystem-growth","title":"\ud83c\udfd7\ufe0f Governance &amp; Ecosystem Growth","text":"<ul> <li>Open-Source Governance: Community-driven improvements, proposals, and grants</li> <li>DAO (Future): Consider establishing a Lethean DAO post-launch</li> <li>Ecosystem Incentives: Dev grants, VPN gateway incentives, liquidity mining (optional)</li> </ul>"},{"location":"web3/tokenomics.html#roadmap-preview","title":"\ud83d\udcc5 Roadmap Preview","text":"Phase Milestone \u2705 Phase 0 Vision, planning, branding \ud83d\udea7 Phase 1 Fork codebase, define tokenomics, build testnet \u23f3 Phase 2 Token snapshot, infrastructure setup, wallet UX \ud83d\udd1c Phase 3 Launch 6-month token swap period \ud83d\udd1c Phase 4 Mainnet go-live, PoW/PoS activation, VPN testing \ud83d\udd1c Phase 5 Burn mechanics, staking UI, exchange listing"},{"location":"web3/tokenomics.html#summary","title":"\ud83d\udd10 Summary","text":"<p>The new Lethean chain is a fresh start \u2014 rooted in its original mission, powered by modern technology, and guided by fair and transparent tokenomics. With a clear path to incentivizing developers, service providers, investors, and users, Lethean is poised to reclaim its place in the decentralized privacy economy.</p> <p>Lethean is more than just a coin. It's infrastructure for a freer internet.</p>"},{"location":"web3/tokenomics.html#links","title":"\ud83d\udcce Links","text":"<ul> <li>GitHub: https://github.com/letheanVPN </li> <li>Website: https://lt.hn</li> <li>Discord: https://discord.com/invite/lethean-lthn-379876792003067906</li> </ul>"},{"location":"updates/archive/2024.html","title":"2024","text":""},{"location":"updates/category/general.html","title":"General","text":""}]}